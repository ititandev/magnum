---
kind: Service
apiVersion: v1
metadata:
  name: kube-apiserver
  namespace: {{ namespace }}
  annotations:
    loadbalancer.openstack.org/port-id: {{ vip_port_id }}
    loadbalancer.openstack.org/timeout-client-data: "300000"
    loadbalancer.openstack.org/timeout-member-data: "300000"
  labels:
    component: kube-apiserver
    tier: control-plane
spec:
  type: NodePort
  selector:
    component: kube-apiserver
    tier: control-plane
  ports:
    - protocol: TCP
      port: 6443
      targetPort: 6443
      name: https
      nodePort: 30443
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-apiserver
  namespace: {{ namespace }}
  labels:
    component: kube-apiserver
    tier: control-plane
spec:
  replicas: 2
  selector:
    matchLabels:
      component: kube-apiserver
      tier: control-plane
  template:
    metadata:
      labels:
        component: kube-apiserver
        tier: control-plane
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - kube-apiserver
                topologyKey: kubernetes.io/hostname
                namespaces:
                - {{ namespace }}
      tolerations:
        - effect: NoExecute
          operator: Exists
      containers:
        - name: kube-apiserver
          resources:
            requests:
              memory: "250Mi"
              cpu: "200m"
            limits:
              memory: "400Mi"
              cpu: "400m"
          image: k8s.gcr.io/kube-apiserver:{{ kube_version }}
          imagePullPolicy: IfNotPresent
          command:
            - kube-apiserver
            - --advertise-address={{ vip_external_ip }}
            - --enable-admission-plugins=NodeRestriction
            - --insecure-port=8080
            - --insecure-bind-address=0.0.0.0
            - --allow-privileged=true
            - --anonymous-auth=true
            - --authorization-mode=Node,RBAC
            - --client-ca-file=/srv/kubernetes/pki/ca/tls.crt
            - --enable-bootstrap-token-auth=true
            - --etcd-servers={{ etcd_server }}
            - --etcd-prefix={{ namespace }}
            - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
            - --kubelet-certificate-authority=/srv/kubernetes/pki/ca/tls.crt
            - --kubelet-client-certificate=/srv/kubernetes/pki/kube-apiserver/tls.crt
            - --kubelet-client-key=/srv/kubernetes/pki/kube-apiserver/tls.key
            - --service-cluster-ip-range={{ service_ip_range }}
            - --service-account-key-file=/srv/kubernetes/pki/service-account/tls.crt
            - --tls-cert-file=/srv/kubernetes/pki/kube-apiserver/tls.crt
            - --tls-private-key-file=/srv/kubernetes/pki/kube-apiserver/tls.key
            {% if cloud_provider_enabled %}
            - --cloud-provider=external
            {% endif %}
            - --v=2
          ports:
            - name: https
              containerPort: 6443
              protocol: TCP
          volumeMounts:
            - name: ca
              mountPath: /srv/kubernetes/pki/ca
            - name: service-account-certs
              mountPath: /srv/kubernetes/pki/service-account
            - name: kube-apiserver-certs
              mountPath: /srv/kubernetes/pki/kube-apiserver
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 15
            periodSeconds: 10
            failureThreshold: 3
      restartPolicy: Always
      volumes:
        - name: ca
          secret:
            secretName: ca
        - name: service-account-certs
          secret:
            secretName: service-account-certs
        - name: kube-apiserver-certs
          secret:
            secretName: kube-apiserver-certs
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: kube-apiserver
  namespace: {{ namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kube-apiserver
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80